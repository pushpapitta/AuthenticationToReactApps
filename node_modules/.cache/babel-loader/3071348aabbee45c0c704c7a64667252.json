{"ast":null,"code":"var _jsxFileName = \"/Users/shanthakumarpitta/Downloads/AuthenticationToReactApps/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  }; //if user is in signup mode,account shd be created on firebase\n  //if user is in login mode,user shd be able to login\n\n\n  const submitHandler = event => {\n    event.preventDefault(); //either use useState n sotre of every keystroke or\n    //use useRef and save data \n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredpassword = passwordInputRef.current.value; //could add validation logic if wanted\n    //to check if the mode is currently ..login or signup\n\n    if (isLogin) {} else {\n      //request to signup api route\n      fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCY4fk4HhY6_-yfybZV7MbqGhNws-kEUBM', {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredpassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-type': 'application.json'\n        }\n      }).then(res => {\n        if (res.ok) {} else {\n          res.json().then(data => {\n            let errorMsg = 'authenticatin failed';\n\n            if (data && data.error && data.error.message) {\n              errorMsg = data.error.message;\n            }\n\n            alert(errorMsg);\n          });\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"5EK5xEuJ1cMzzb2GzgNOWjCp1Ow=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/Users/shanthakumarpitta/Downloads/AuthenticationToReactApps/src/components/Auth/AuthForm.js"],"names":["useState","useRef","classes","AuthForm","isLogin","setIsLogin","emailInputRef","passwordInputRef","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredpassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMsg","error","message","alert","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n\n  const [isLogin, setIsLogin] = useState(true);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n  //if user is in signup mode,account shd be created on firebase\n  //if user is in login mode,user shd be able to login\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    //either use useState n sotre of every keystroke or\n    //use useRef and save data \n    const enteredEmail = emailInputRef.current.value;\n    const enteredpassword = passwordInputRef.current.value;\n\n    //could add validation logic if wanted\n    //to check if the mode is currently ..login or signup\n    if (isLogin) {\n\n    } else {\n      //request to signup api route\n      fetch(\n        'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCY4fk4HhY6_-yfybZV7MbqGhNws-kEUBM',\n        {\n          method: 'POST',\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredpassword,\n            returnSecureToken: true\n          }),\n          headers: {\n            'Content-type': 'application.json'\n          }\n        }\n      ).then(res => {\n        if (res.ok) {\n\n        } else {\n          res.json().then(data => {\n            let errorMsg = 'authenticatin failed';\n            if (data && data.error && data.error.message) {\n              errorMsg = data.error.message;\n            }\n            alert(errorMsg);\n          });\n        }\n      });\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passwordInputRef} />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}